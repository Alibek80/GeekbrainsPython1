#!/usr/bin/python3

"""
== Лото ==

Правила игры в лото.

Игра ведется с помощью специальных карточек, на которых отмечены числа,
и фишек (бочонков) с цифрами.

Количество бочонков — 90 штук (с цифрами от 1 до 90).

Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр,
расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:

--------------------------
    9 43 62          74 90
 2    27    75 78    82
   41 56 63     76      86
--------------------------

В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается
случайная карточка.

Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.

Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.

Побеждает тот, кто первый закроет все числа на своей карточке.

Пример одного хода:

Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71
--------------------------
-- Карточка компьютера ---
 7 11     - 14    87
      16 49    55 77    88
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)

Подсказка: каждый следующий случайный бочонок из мешка удобно получать
с помощью функции-генератора.

Подсказка: для работы с псевдослучайными числами удобно использовать
модуль random: http://docs.python.org/3/library/random.html

"""
import random

# создаем список для выбрасывания бочонков
barrel_list = list (map (lambda x: x + 1, random.sample (range (90), k = 90)))

# создаем списки для раздачи карочек игрокам
both_cards = list (map (lambda x: x + 1, random.sample (range (90), k = 30)))
human = both_cards [0:15]
human = sorted (human)
comp = both_cards [15:30]
comp = sorted (comp)

# создаем функцию по отрисовке карт игрока и компьютера
def draw_card (card1, card2):
    print ("-------карточка игрока-------")
    gr_card1 = [card1 [i:i+5] for i in range(0, len(card1), 5)]
    for row in gr_card1:
        for val in row:
            print ("{:>4}".format(val), end = " "),
        print ("\n")
    print ("-----------------------------")
    print ("-----карточка компьютера-----")
    gr_card2 = [card2 [i:i+5] for i in range(0, len(card2), 5)]
    for row in gr_card2:
        for val in row:
            print ("{:>4}".format(val), end = " "),
        print ("\n")
    print ("-----------------------------")    

# запускаем модуль для игры
victory = False
i = 0

print ("-------Начинаем игру!-------")

while not victory:
    print ("Новый бочонок: {} (осталось {})".format(barrel_list[i], 89 - i))
    draw_card (human, comp)
    if barrel_list [i] in comp:
        idc = comp.index (barrel_list [i])
        comp [idc] = "-"
    q = input ("Зачеркнуть цифру? (y/n) \n")
    if q == "y" or q == "Y":
        if barrel_list [i] in human:
            idc = human.index (barrel_list [i])
            human [idc] = "-"
        else:
            print ("Компьютер выиграл!")
            victory = True
    if q == "n" or q == "N":
        if barrel_list [i] in human:
            print ("Компьютер выиграл!")
            victory = True
    if len (set (human)) == 1:
        print ("Человек выиграл!")
        victory = True
    if len (set (comp)) == 1:
        print ("Компьютер выиграл!")
        victory = True    
    i +=1



